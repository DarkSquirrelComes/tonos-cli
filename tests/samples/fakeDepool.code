.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro sendAnswer
DROP
; Decode input parameters
ENDS
CALLREF {
	CALL $sendAnswer_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	sendAnswer_internal
.type	sendAnswer_internal, @function
CALL $sendAnswer_internal_macro$

.macro sendAnswer_internal_macro
; function sendAnswer
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x39896800000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 11
STUR 32
;; comment
PUSHINT 222
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function sendAnswer

.macro addOrdinaryStake
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode stake
LDU 64
ENDS
;; param: stake
CALLREF {
	CALL $addOrdinaryStake_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addOrdinaryStake_internal
.type	addOrdinaryStake_internal, @function
CALL $addOrdinaryStake_internal_macro$

.macro addOrdinaryStake_internal_macro
;; param: stake
; function addOrdinaryStake
; expValue
; end expValue
;; push identifier stake
DUP
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 11
STUR 32
;; comment
PUSHINT 222
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function addOrdinaryStake
DROP

.macro addVestingStake
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode stake
LDU 64
; Decode beneficiary
LDMSGADDR
; Decode withdrawalPeriod
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
; Decode totalPeriod
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: stake
;; param: beneficiary
;; param: withdrawalPeriod
;; param: totalPeriod
CALLREF {
	CALL $addVestingStake_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addVestingStake_internal
.type	addVestingStake_internal, @function
CALL $addVestingStake_internal_macro$

.macro addVestingStake_internal_macro
;; param: stake
;; param: beneficiary
;; param: withdrawalPeriod
;; param: totalPeriod
; function addVestingStake
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier stake
PUSH S3
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier beneficiary
PUSH S2
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
;; push identifier withdrawalPeriod
PUSH S1
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
;; push identifier totalPeriod
DUP
; colValue
SETGLOB 14
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function addVestingStake
BLKDROP 4

.macro addLockStake
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode stake
LDU 64
; Decode beneficiary
LDMSGADDR
; Decode withdrawalPeriod
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
; Decode totalPeriod
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: stake
;; param: beneficiary
;; param: withdrawalPeriod
;; param: totalPeriod
CALLREF {
	CALL $addLockStake_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLockStake_internal
.type	addLockStake_internal, @function
CALL $addLockStake_internal_macro$

.macro addLockStake_internal_macro
;; param: stake
;; param: beneficiary
;; param: withdrawalPeriod
;; param: totalPeriod
; function addLockStake
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier stake
PUSH S3
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier beneficiary
PUSH S2
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
;; push identifier withdrawalPeriod
PUSH S1
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
;; push identifier totalPeriod
DUP
; colValue
SETGLOB 14
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function addLockStake
BLKDROP 4

.macro withdrawFromPoolingRound
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode withdrawValue
LDU 64
ENDS
;; param: withdrawValue
CALLREF {
	CALL $withdrawFromPoolingRound_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	withdrawFromPoolingRound_internal
.type	withdrawFromPoolingRound_internal, @function
CALL $withdrawFromPoolingRound_internal_macro$

.macro withdrawFromPoolingRound_internal_macro
;; param: withdrawValue
; function withdrawFromPoolingRound
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier withdrawValue
DUP
; colValue
SETGLOB 10
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function withdrawFromPoolingRound
DROP

.macro withdrawPart
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode withdrawValue
LDU 64
ENDS
;; param: withdrawValue
CALLREF {
	CALL $withdrawPart_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	withdrawPart_internal
.type	withdrawPart_internal, @function
CALL $withdrawPart_internal_macro$

.macro withdrawPart_internal_macro
;; param: withdrawValue
; function withdrawPart
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier withdrawValue
DUP
; colValue
SETGLOB 10
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function withdrawPart
DROP

.macro withdrawAll
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $withdrawAll_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	withdrawAll_internal
.type	withdrawAll_internal, @function
CALL $withdrawAll_internal_macro$

.macro withdrawAll_internal_macro
; function withdrawAll
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
FALSE
; colValue
SETGLOB 15
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function withdrawAll

.macro cancelWithdrawal
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $cancelWithdrawal_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	cancelWithdrawal_internal
.type	cancelWithdrawal_internal, @function
CALL $cancelWithdrawal_internal_macro$

.macro cancelWithdrawal_internal_macro
; function cancelWithdrawal
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
TRUE
; colValue
SETGLOB 15
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function cancelWithdrawal

.macro transferStake
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode dest
LDMSGADDR
; Decode amount
LDU 64
ENDS
;; param: dest
;; param: amount
CALLREF {
	CALL $transferStake_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	transferStake_internal
.type	transferStake_internal, @function
CALL $transferStake_internal_macro$

.macro transferStake_internal_macro
;; param: dest
;; param: amount
; function transferStake
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier amount
DUP
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier dest
PUSH S1
; colValue
SETGLOB 12
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function transferStake
DROP2

.macro ticktock
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $ticktock_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	ticktock_internal
.type	ticktock_internal, @function
CALL $ticktock_internal_macro$

.macro ticktock_internal_macro
; function ticktock
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
;; transfer()
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x17b000000000000000000000000001_
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; emit StakeSigningRequested
PUSHSLICE xc000000000000000000000000045163712
NEWC
STSLICE
;; electionId
PUSHINT 1
STUR 32
;; proxy
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000005_
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function ticktock

.macro receiveFunds
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $receiveFunds_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	receiveFunds_internal
.type	receiveFunds_internal, @function
CALL $receiveFunds_internal_macro$

.macro receiveFunds_internal_macro
; function receiveFunds
; expValue
; end expValue
;; get member sender
GETGLOB 9
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
; colValue
SETGLOB 16
; end colValue
; end function receiveFunds

.macro getData
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getData_internal_macro$
}
;; emitting 7 value(s)
PUSH S7
EQINT -1
PUSHCONT {
	PUSH S9
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 97
	STZEROES
	STSLICECONST 1
	NEWC
	STSLICECONST xbb14f64b
	PUSH S8
	STUR 64
	PUSH S7
	STSLICER
	PUSH S6
	STSLICER
	PUSH S5
	STUR 32
	PUSH S4
	STUR 32
	PUSH S3
	STIR 1
	PUSH S2
	STUR 128
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 7
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getData_internal
.type	getData_internal, @function
CALL $getData_internal_macro$

.macro getData_internal_macro
;; ret param: stake
PUSHINT 0
;; ret param: sender
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: receiver
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: withdrawal
;; ret param: total
;; ret param: reinvest
;; ret param: value
PUSHINT 0
BLKPUSH 3, 0
; function getData
;; return
;; push identifier m_stake
GETGLOB 10
;; push identifier m_sender
GETGLOB 11
;; push identifier m_receiver
GETGLOB 12
;; push identifier m_withdrawal
GETGLOB 13
;; push identifier m_total
GETGLOB 14
;; push identifier m_reinvest
GETGLOB 15
;; push identifier m_value
GETGLOB 16
BLKDROP2 7, 7
; end function getData

.macro setVestingDonor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode donor
LDMSGADDR
ENDS
;; param: donor
CALLREF {
	CALL $setVestingDonor_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setVestingDonor_internal
.type	setVestingDonor_internal, @function
CALL $setVestingDonor_internal_macro$

.macro setVestingDonor_internal_macro
;; param: donor
; function setVestingDonor
; expValue
; end expValue
;; push identifier donor
DUP
; colValue
SETGLOB 12
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function setVestingDonor
DROP

.macro setLockDonor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode donor
LDMSGADDR
ENDS
;; param: donor
CALLREF {
	CALL $setLockDonor_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setLockDonor_internal
.type	setLockDonor_internal, @function
CALL $setLockDonor_internal_macro$

.macro setLockDonor_internal_macro
;; param: donor
; function setLockDonor
; expValue
; end expValue
;; push identifier donor
DUP
; colValue
SETGLOB 12
; end colValue
;; Remote call IFakeDePoolClient.receiveAnswer
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x4075bcd150000000000000000000000000007e213c89_
STSLICER
;; errcode
PUSHINT 0
STUR 32
;; comment
PUSHINT 0
STUR 64
ENDC
PUSHINT 0
SENDRAWMSG
; end function setLockDonor
DROP

.macro error
DROP
; Decode input parameters
; Decode code
LDU 256
ENDS
;; param: code
CALLREF {
	CALL $error_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	error_internal
.type	error_internal, @function
CALL $error_internal_macro$

.macro error_internal_macro
;; param: code
; function error
;; push identifier code
BLKPUSH 2, 0
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
; end function error
THROWANY

.macro outOfGas
DROP
; Decode input parameters
ENDS
CALLREF {
	CALL $outOfGas_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	outOfGas_internal
.type	outOfGas_internal, @function
CALL $outOfGas_internal_macro$

.macro outOfGas_internal_macro
; function outOfGas
NEWDICT
;; decl: map
PUSHINT 0
;; decl: k
; while
PUSHCONT {
	;; push identifier k
	DUP
	;; <=
	PUSHINT 9999
	LEQ
}
PUSHCONT {
	; expValue
	;; push identifier k
	DUP
	; end expValue
	;; push identifier k
	BLKPUSH 2, 2
	; colValue
	NEWC
	STU 256
	ROTREV
	PUSHINT 256
	DICTUSETB
	POP S2
	; end colValue
}
WHILE
; end while
DROP2
; end function outOfGas

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 14
GETGLOB 16
XCHG s2
STU 32
STU 128
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 15
REVERSE 7, 0
STBREF
STU 64
STSLICE
STSLICE
STU 32
STI 1
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDU 32
PLDU 128
SETGLOB 16
SETGLOB 14
LDU 64
LDMSGADDR
LDMSGADDR
LDU 32
PLDI 1
SETGLOB 15
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDU 32
	PLDU 128
	SETGLOB 16
	SETGLOB 14
	LDU 64
	LDMSGADDR
	LDMSGADDR
	LDU 32
	PLDI 1
	SETGLOB 15
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init m_stake
	PUSHINT 0
	SETGLOB 10
	; init m_sender
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 11
	; init m_receiver
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 12
	; init m_withdrawal
	PUSHINT 0
	SETGLOB 13
	; init m_total
	PUSHINT 0
	SETGLOB 14
	; init m_reinvest
	PUSHINT 0
	SETGLOB 15
	; init m_value
	PUSHINT 0
	SETGLOB 16
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro public_function_selector
DUP
PUSHINT 679516195
LEQ
PUSHCONT {
	DUP
	PUSHINT 179050749
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 5549867
		EQUAL
		IFJMPREF {
			CALL $sendAnswer$
		}
		DUP
		PUSHINT 179050749
		EQUAL
		IFJMPREF {
			CALL $addOrdinaryStake$
		}
	}
	IFJMP
	DUP
	PUSHINT 322401098
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 317981552
		EQUAL
		IFJMPREF {
			CALL $withdrawAll$
		}
		DUP
		PUSHINT 322401098
		EQUAL
		IFJMPREF {
			CALL $cancelWithdrawal$
		}
	}
	IFJMP
	DUP
	PUSHINT 679516195
	EQUAL
	IFJMPREF {
		CALL $ticktock$
	}
}
IFJMP
DUP
PUSHINT 1473519816
LEQ
PUSHCONT {
	DUP
	PUSHINT 1081738786
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 991229515
		EQUAL
		IFJMPREF {
			CALL $getData$
		}
		DUP
		PUSHINT 1081738786
		EQUAL
		IFJMPREF {
			CALL $addLockStake$
		}
	}
	IFJMP
	DUP
	PUSHINT 1315323457
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1236773697
		EQUAL
		IFJMPREF {
			CALL $setLockDonor$
		}
		DUP
		PUSHINT 1315323457
		EQUAL
		IFJMPREF {
			CALL $outOfGas$
		}
	}
	IFJMP
	DUP
	PUSHINT 1473519816
	EQUAL
	IFJMPREF {
		CALL $setVestingDonor$
	}
}
IFJMP
DUP
PUSHINT 1961843497
LEQ
PUSHCONT {
	DUP
	PUSHINT 1749338091
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1745928014
		EQUAL
		IFJMPREF {
			CALL $transferStake$
		}
		DUP
		PUSHINT 1749338091
		EQUAL
		IFJMPREF {
			CALL $receiveFunds$
		}
	}
	IFJMP
	DUP
	PUSHINT 1903783592
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1903783592
		EQUAL
		IFJMPREF {
			CALL $addVestingStake$
		}
	}
	IFJMP
	DUP
	PUSHINT 1961843497
	EQUAL
	IFJMPREF {
		CALL $withdrawFromPoolingRound$
	}
}
IFJMP
DUP
PUSHINT 2142639138
LEQ
PUSHCONT {
	DUP
	PUSHINT 2073458374
	EQUAL
	IFJMPREF {
		CALL $withdrawPart$
	}
	DUP
	PUSHINT 2142639138
	EQUAL
	IFJMPREF {
		CALL $error$
	}
}
IFJMP
